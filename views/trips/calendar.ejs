<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%- title %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
  <link href='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.9/index.global.min.css' rel='stylesheet' />
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <%- include('../partials/nav') %>
  
  <main class="container-fluid mt-4">
    <%- include('../partials/flash') %>
    
    <div class="d-flex justify-content-between align-items-center mb-3">
      <h1><%- trip.name %> - Calendar View</h1>
      <a href="/trips/<%- trip.id %>" class="btn btn-secondary">
        <i class="bi bi-arrow-left"></i> Back to Trip
      </a>
    </div>

    <div class="mb-3">
      <span class="badge bg-primary me-2">✈️ Flight</span>
      <span class="badge bg-success me-2">🏨 Hotel</span>
      <span class="badge" style="background-color: #fd7e14;">🚂 Transportation</span>
      <span class="badge bg-secondary me-2 ms-2">🚗 Car Rental</span>
      <span class="badge bg-danger me-2">📅 Event</span>
    </div>

    <div id="calendar"></div>
  </main>

  <%- include('../partials/footer') %>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.9/index.global.min.js'></script>
  <script src="/js/datetime-formatter.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const calendarEl = document.getElementById('calendar');
      
      const events = [];
      
      // Add flights
      <% trip.flights.forEach(flight => { %>
        events.push({
          title: '✈️ <%- flight.airline %> <%- flight.flightNumber %>: <%- flight.origin %> → <%- flight.destination %>',
          start: '<%- flight.departureDateTime %>',
          end: '<%- flight.arrivalDateTime %>',
          color: '#0d6efd',
          extendedProps: {
            type: 'flight',
            details: {
              airline: '<%- flight.airline %>',
              flightNumber: '<%- flight.flightNumber %>',
              origin: '<%- flight.origin %>',
              destination: '<%- flight.destination %>',
              pnr: '<%- flight.pnr || "" %>'
            }
          }
        });
      <% }) %>
      
      // Add hotels
      <% trip.hotels.forEach(hotel => { %>
        events.push({
          title: '🏨 <%- hotel.hotelName %>',
          start: '<%- hotel.checkInDateTime %>',
          end: '<%- hotel.checkOutDateTime %>',
          color: '#198754',
          extendedProps: {
            type: 'hotel',
            details: {
              name: '<%- hotel.hotelName %>',
              address: '<%- hotel.address %>',
              confirmation: '<%- hotel.confirmationNumber || "" %>'
            }
          }
        });
      <% }) %>
      
      // Add transportation
      <% trip.transportation.forEach(transport => { %>
        events.push({
          title: '🚂 <%- transport.method %>: <%- transport.origin %> → <%- transport.destination %>',
          start: '<%- transport.departureDateTime %>',
          end: '<%- transport.arrivalDateTime %>',
          color: '#fd7e14',
          extendedProps: {
            type: 'transportation',
            details: {
              method: '<%- transport.method %>',
              origin: '<%- transport.origin %>',
              destination: '<%- transport.destination %>',
              journeyNumber: '<%- transport.journeyNumber || "" %>'
            }
          }
        });
      <% }) %>
      
      // Add car rentals
      <% trip.carRentals.forEach(rental => { %>
        events.push({
          title: '🚗 <%- rental.company %> Car Rental',
          start: '<%- rental.pickupDateTime %>',
          end: '<%- rental.dropoffDateTime %>',
          color: '#6c757d',
          extendedProps: {
            type: 'carRental',
            details: {
              company: '<%- rental.company %>',
              pickupLocation: '<%- rental.pickupLocation %>',
              dropoffLocation: '<%- rental.dropoffLocation %>'
            }
          }
        });
      <% }) %>
      
      // Add events
      <% trip.events.forEach(event => { %>
        events.push({
          title: '📅 <%- event.name %>',
          start: '<%- event.startDateTime %>',
          end: '<%- event.endDateTime %>',
          color: '#dc3545',
          extendedProps: {
            type: 'event',
            details: {
              name: '<%- event.name %>',
              location: '<%- event.location || "" %>',
              contactPhone: '<%- event.contactPhone || "" %>'
            }
          }
        });
      <% }) %>

      const calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'dayGridMonth',
        firstDay: 1, // Monday
        headerToolbar: {
          left: 'prev,next today',
          center: 'title',
          right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
        },
        events: events,
        eventClick: function(info) {
          const details = info.event.extendedProps.details;
          let detailsText = `Event: ${info.event.title}\n`;
          detailsText += `Start: ${formatDateTime(info.event.start.toISOString())}\n`;
          if (info.event.end) {
            detailsText += `End: ${formatDateTime(info.event.end.toISOString())}\n`;
          }
          detailsText += `Type: ${info.event.extendedProps.type}\n\n`;
          
          Object.keys(details).forEach(key => {
            if (details[key]) {
              detailsText += `${key}: ${details[key]}\n`;
            }
          });
          
          alert(detailsText.trim());
        },
        editable: true,
        eventDrop: function(info) {
          if (confirm(`Move "${info.event.title}" to ${formatDateTime(info.event.start.toISOString())}?`)) {
            console.log('Event moved:', {
              title: info.event.title,
              start: info.event.start,
              end: info.event.end,
              type: info.event.extendedProps.type
            });
            alert('Event updated! (Backend implementation needed)');
          } else {
            info.revert();
          }
        },
        eventResize: function(info) {
          if (confirm(`Change duration of "${info.event.title}"?`)) {
            console.log('Event resized:', {
              title: info.event.title,
              start: info.event.start,
              end: info.event.end
            });
            alert('Duration updated! (Backend implementation needed)');
          } else {
            info.revert();
          }
        },
        height: 'auto',
        eventTimeFormat: {
          hour: '2-digit',
          minute: '2-digit',
          hour12: false
        }
      });
      
      calendar.render();
    });
  </script>
</body>
</html>
